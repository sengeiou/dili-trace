<?xml version="1.0" encoding="UTF-8" standalone="yes" ?>
<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.12.0.xsd">
    <!-- Configure the database connection here -->
    <jdbc>
        <driver>com.mysql.cj.jdbc.Driver</driver>
        <url>jdbc:mysql://10.28.10.169:3306/hztrace?serverTimezone=UTC&amp;characterEncoding=utf-8
</url>
        <user>root</user>
        <password>123456</password>
    </jdbc>
    <generator>
       
        
        <!-- The default code generator. You can override this one, to generate
your own code style. Supported generators: - org.jooq.codegen.JavaGenerator
- org.jooq.codegen.ScalaGenerator Defaults to org.jooq.codegen.JavaGenerator -->
        <name>org.jooq.codegen.JavaGenerator</name>
        <database>
            <!-- The database type. The format here is: org.jooq.meta.[database].[database]Database -->
            <!--  <name>org.jooq.meta.mysql.MySQLDatabase</name> -->
            <!-- <name>org.jooq.meta.extensions.jpa.JPADatabase</name> -->
            <!-- The database schema (or in the absence of schema support, in your
RDBMS this can be the owner, user, database name) to be generated -->
            <!-- <inputSchema>library</inputSchema> -->
            <!-- All elements that are generated from your schema (A Java regular
expression. Use the pipe to separate several expressions) Watch out for case-sensitivity.
Depending on your database, this might be important! -->
            <!-- <includes>.*</includes> -->
            <!-- All elements that are excluded from your schema (A Java regular expression.
Use the pipe to separate several expressions). Excludes match before includes,
i.e. excludes have a higher priority -->
            <!-- <excludes></excludes> -->
            <inputSchema>hztrace</inputSchema>
            <name>org.jooq.meta.mysql.MySQLDatabase</name>

        </database>
        <generate>
           	<!--生成dao和pojo -->
			<daos>true</daos>
			<records>true</records>
			<keys>false</keys>
			<recordsImplementingRecordN>false</recordsImplementingRecordN>
			<globalTableReferences>false</globalTableReferences>
			<globalKeyReferences>false</globalKeyReferences>
			<globalObjectReferences>false</globalObjectReferences>
			<indexes>false</indexes>
			<primaryKeyTypes>false</primaryKeyTypes>
			<!--emptySchemas>true</emptySchemas>
			<emptyCatalogs>true</emptyCatalogs-->

			<pojos>true</pojos>
			<jpaAnnotations>true</jpaAnnotations>
			<!--把数据库时间类型映射到java 8时间类型 -->
			<javaTimeTypes>true</javaTimeTypes>
			
			<interfaces>false</interfaces>
			<!--不在生成的代码中添加spring注释，比如@Repository -->
			<springAnnotations>true</springAnnotations>
        </generate>
        <target>
            <!-- The destination package of your generated classes (within the destination
directory) -->
            <packageName>com.testJooq.generated</packageName>
            <!-- The destination directory of your generated classes. Using Maven
directory layout here -->
            <directory>./src/main/java</directory>
        </target>

        <strategy>
            <name>org.jooq.codegen.DefaultGeneratorStrategy</name>
<!--            <name>com.jooq.CustomJooqGeneratorStrategy</name> -->
           <matchers>
               <tables>
                   <table>

                        <tableIdentifier>
                           <transform>UPPER</transform>y<![CDATA[ ]]>
                           <expression>$0</expression>
                       </tableIdentifier>
                       <tableClass>
                           <transform>PASCAL</transform>
                           <expression>T_$0</expression>
                       </tableClass>
                       <recordClass>
                           <transform>PASCAL</transform>
                           <expression>R_$0</expression>
                       </recordClass> 
                   </table>
               </tables>
           </matchers>
       </strategy>
    </generator>

</configuration>