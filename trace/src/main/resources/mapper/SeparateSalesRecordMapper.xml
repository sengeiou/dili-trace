<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.trace.dao.SeparateSalesRecordMapper">
  <resultMap id="BaseResultMap" type="com.dili.trace.domain.SeparateSalesRecord">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="sales_customer_name" jdbcType="VARCHAR" property="salesCustomerName" />
    <result column="sales_city_id" jdbcType="BIGINT" property="salesCityId" />
    <result column="sales_city_name" jdbcType="VARCHAR" property="salesCityName" />
    <result column="sales_weight" jdbcType="INTEGER" property="salesWeight" />
    <result column="register_bill_code" jdbcType="BIGINT" property="registerBillCode" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="modified" jdbcType="TIMESTAMP" property="modified" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
    -->
    id, sales_customer_name, sales_city_id, sales_city_name, sales_weight, register_bill_code, 
    created, modified
  </sql>
  <select id="selectBy" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
    -->
    select 
    <include refid="Base_Column_List" />
    from separate_sales_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <update id="updateBy" parameterType="com.dili.trace.domain.SeparateSalesRecord">
    <!--
      WARNING - @mbg.generated
    -->
    update separate_sales_record
    <set>
      <if test="salesCustomerName != null">
        sales_customer_name = #{salesCustomerName,jdbcType=VARCHAR},
      </if>
      <if test="salesCityId != null">
        sales_city_id = #{salesCityId,jdbcType=BIGINT},
      </if>
      <if test="salesCityName != null">
        sales_city_name = #{salesCityName,jdbcType=VARCHAR},
      </if>
      <if test="salesWeight != null">
        sales_weight = #{salesWeight,jdbcType=INTEGER},
      </if>
      <if test="registerBillCode != null">
        register_bill_code = #{registerBillCode,jdbcType=BIGINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="modified != null">
        modified = #{modified,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="alreadySeparateSalesWeight" resultType="java.lang.Integer">
    SELECT  sum(sales_weight) FROM separate_sales_record WHERE register_bill_code = #{registerBillCode}
  </select>
  
    <select id="getAlreadySeparateSalesWeightByTradeNo" resultType="java.lang.Integer">
    SELECT  sum(sales_weight) FROM separate_sales_record WHERE trade_no = #{tradeNo}
  </select>

  <select id="listSeparateSalesOutput"  parameterType="com.dili.trace.api.dto.SeparateSalesApiListQueryInput" resultType="com.dili.trace.api.dto.SeparateSalesApiListOutput">
    select 
    separate_sales_record.id,
    separate_sales_record.sales_plate as plate,
     separate_sales_record.sales_type as sales_type,
    <![CDATA[  case when (separate_sales_record.parent_id is null and register_bill.weight<> separate_sales_record.sales_weight) then register_bill.weight else  separate_sales_record.sales_weight end as weight,]]>
    <![CDATA[  case when  (separate_sales_record.parent_id is null and  register_bill.weight<> separate_sales_record.sales_weight )then register_bill.weight else  separate_sales_record.store_weight end as store_weight,]]>
    register_bill.product_name as product_name,
    register_bill.latest_detect_operator,
    register_bill.latest_detect_record_id,
    register_bill.latest_detect_time,
    register_bill.latest_pd_result,
    register_bill.created as created,
    register_bill.state as state,
    register_bill.detect_state as detect_state,
    register_bill.origin_name as origin_name,
    upstream.name as upstream_name
    from separate_sales_record left join register_bill on separate_sales_record.bill_id=register_bill.id left join upstream on upstream.id=register_bill.upstream_id
    where separate_sales_record.bill_id is not null
    <if test="id != null">
      AND separate_sales_record.id = #{id}
    </if>
    <if test="createdStart != null  and createdStart != ''">
      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
    </if>
    <if test="createdEnd != null  and createdEnd != ''">
      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
    </if>
    <if test="likeProductName != null and likeProductName != ''">
      AND separate_sales_record.id = #{likeProductName}
    </if>
    <if test="userId != null">
      AND separate_sales_record.sales_user_id = #{userId}
    </if>
    <if test="likeProductName != ''">
      AND register_bill.product_name like '%${likeProductName}%'
    </if>
    

  </select>
  <select id="countSeparateSalesOutput"  parameterType="com.dili.trace.api.dto.SeparateSalesApiListQueryInput" resultType="java.lang.Long">
    select   count(1) from
    from separate_sales_record left join register_bill on separate_sales_record.bill_id=register_bill.id left join upstream on upstream.id=register_bill.upstream_id
    where separate_sales_record.bill_id is not null
    <if test="id != null">
      AND separate_sales_record.id = #{id}
    </if>
    <if test="createdStart != null  and createdStart != ''">
      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
    </if>
    <if test="createdEnd != null  and createdEnd != ''">
      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
    </if>
    <if test="likeProductName != null and likeProductName != ''">
      AND separate_sales_record.id = #{likeProductName}
    </if>
    <if test="userId != null">
      AND separate_sales_record.sales_user_id = #{userId}
    </if>
  </select>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  <select id="listCheckRecordOutput"  parameterType="com.dili.trace.api.dto.SeparateSalesApiListQueryInput" resultType="com.dili.trace.api.dto.SeparateSalesApiListOutput">
    
    select * from (
      select 'checkin',checkin_record.checkin_status as status,register_bill.product_name 



from checkin_record left join separate_sales_record 
on checkin_record.id=separate_sales_record.checkin_record_id 
left join register_bill on separate_sales_record.bill_id =register_bill.id 
where checkin_record.operator_id =#{operator_id}
<if test="createdStart != null  and createdStart != ''">
      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
    </if>
    <if test="createdEnd != null  and createdEnd != ''">
      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
    </if>
        <if test="operatorId != null">
      AND separate_sales_record.sales_user_id = #{operatorId}
    </if>
union 

select 'checkout',checkout_record.checkout_status as status,register_bill.product_name 
from checkout_record left join separate_sales_record 
on checkout_record.id=separate_sales_record.checkout_record_id 
left join register_bill on separate_sales_record.bill_id =register_bill.id 
where checkin_record.operator_id =#{operator_id}
<if test="createdStart != null  and createdStart != ''">
      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
    </if>
    <if test="createdEnd != null  and createdEnd != ''">
      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
    </if>

    <if test="operatorId != null">
      AND separate_sales_record.sales_user_id = #{operatorId}
    </if>
    
    )t
    
  
    

  </select>
  <select id="countlistCheckRecordOutput"  parameterType="com.dili.trace.api.dto.SeparateSalesApiListQueryInput" resultType="java.lang.Long">
    select   count(1)  from (
      select 'checkin',checkin_record.checkin_status as status,register_bill.product_name 
		from checkin_record left join separate_sales_record 
		on checkin_record.id=separate_sales_record.checkin_record_id 
		left join register_bill on separate_sales_record.bill_id =register_bill.id 
		where checkin_record.operator_id =#{operator_id}
		<if test="createdStart != null  and createdStart != ''">
		      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
		    </if>
		    <if test="createdEnd != null  and createdEnd != ''">
		      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
		    </if>
		        <if test="operatorId != null">
		      AND separate_sales_record.sales_user_id = #{operatorId}
		    </if>
		union 
		select 'checkout',checkout_record.checkout_status as status,register_bill.product_name 
		from checkout_record left join separate_sales_record 
		on checkout_record.id=separate_sales_record.checkout_record_id 
		left join register_bill on separate_sales_record.bill_id =register_bill.id 
		where checkin_record.operator_id =#{operator_id}
		<if test="createdStart != null  and createdStart != ''">
		      <![CDATA[ AND #{createdStart}<=separate_sales_record.created ]]>
		    </if>
		    <if test="createdEnd != null  and createdEnd != ''">
		      <![CDATA[AND separate_sales_record.id <=#{createdEnd}]]>
		    </if>
		
		    <if test="operatorId != null">
		      AND separate_sales_record.sales_user_id = #{operatorId}
		    </if>
		    
		    )t
  </select>
</mapper>