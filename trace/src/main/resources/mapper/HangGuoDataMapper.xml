<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.trace.dao.HangGuoDataMapper">

    <insert id="bachInsertCommodityList" parameterType="java.util.List" useGeneratedKeys="true">
        insert into category(name,full_name,level,created,modified,market_id)
        values
        <foreach collection="list" item="co" separator=",">
            (#{co.name},#{co.fullName},#{co.level},#{co.created},#{co.modified},#{co.marketId})
        </foreach>
    </insert>

    <update id="updateHangGuoCommodityParent" parameterType="com.dili.trace.domain.Category">
       UPDATE category c,category c2
        SET c2.parent_id=c.id
        WHERE c.code=c2.parent_code
        AND c2.parent_code IS NOT NULL
        AND c2.created=#{created}
    </update>

    <select id="getUserListByThirdPartyCode" parameterType="java.util.List"
            resultType="com.dili.trace.domain.User">
        SELECT
        u.name,
        u.id,
        u.third_party_code
        FROM
        user u
        where u.third_party_code
        <foreach collection="list" open=" IN (" close=")" item="thirdCode" separator=",">
            #{thirdCode}
        </foreach>
    </select>

    <update id="batchUpdateUserByThirdCode" parameterType="com.dili.trace.domain.User">
        update user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="cardNo != null">
                card_no = #{cardNo,jdbcType=VARCHAR},
            </if>
            <if test="addr != null">
                addr = #{addr,jdbcType=VARCHAR},
            </if>
            <if test="cardNoUrl != null">
                card_no_url = #{cardNoUrl,jdbcType=VARCHAR},
            </if>
            <if test="tallyAreaNo != null">
                tally_area_no = #{tallyAreaNo,jdbcType=VARCHAR},
            </if>
            <if test="businessLicenseUrl != null">
                business_license_url = #{businessLicenseUrl,jdbcType=VARCHAR},
            </if>
            <if test="salesCityId != null">
                sales_city_id = #{salesCityId,jdbcType=BIGINT},
            </if>
            <if test="salesCityName != null">
                sales_city_name = #{salesCityName,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=BIT},
            </if>
            <if test="pwd != null">
                pwd = #{pwd,jdbcType=VARCHAR},
            </if>
            <if test="created != null">
                created = #{created,jdbcType=TIMESTAMP},
            </if>
            <if test="modified != null">
                modified = #{modified,jdbcType=TIMESTAMP},
            </if>

            <if test="license != null">
                license = #{license},
            </if>
            <if test="credentialType != null">
                credential_type = #{credentialType},
            </if>
            <if test="credentialName != null">
                credential_name = #{credentialName},
            </if>
            <if test="credentialUrl != null">
                credential_url = #{credentialUrl},
            </if>
            <if test="credentialNumber != null">
                credential_number = #{credentialNumber},
            </if>
            <if test="idAddr != null">
                id_addr = #{idAddr},
            </if>
            <if test="whereis != null">
                whereis = #{whereis},
            </if>
            <if test="creditLimit != null">
                credit_limit = #{creditLimit},
            </if>
            <if test="effectiveDate != null">
                effective_date = #{effectiveDate},
            </if>
            <if test="remark != null">
                remark = #{remark},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="fixedTelephone != null">
                fixed_telephone = #{fixedTelephone},
            </if>
            <if test="chargeRate != null">
                charge_rate = #{chargeRate},
            </if>

            <if test="mangerRate != null">
                manger_rate = #{mangerRate},
            </if>
            <if test="storageRate != null">
                storage_rate = #{storageRate},
            </if>
            <if test="assessRate != null">
                assess_rate = #{assessRate},
            </if>
            <if test="approver != null">
                approver = #{approver},
            </if>
            <if test="supplierType != null">
                supplier_type = #{supplierType},
            </if>

        </set>
        where third_party_code
        <foreach collection="list" open=" IN (" close=")" item="thirdCode" separator=",">
            #{thirdCode}
        </foreach>
    </update>

    <select id="getCategoryListByThirdCode" parameterType="java.util.List"
            resultType="com.dili.trace.domain.Category">
        select
        id
        parent_id
        name
        full_name
        level
        created
        modified
        market_id
        code
        is_show
        type
        specification
        parent_code
        from category
        where
        code
        <foreach collection="list" open=" IN (" close=")" item="thirdCode" separator=",">
            #{thirdCode}
        </foreach>
    </select>

    <delete id="deleteHangGuoCommodityByThirdCode" parameterType="java.util.List">
        delete from category
        where
        code
        <foreach collection="list" open=" IN (" close=")" item="thirdCode" separator=",">
            #{thirdCode}
        </foreach>
    </delete>

    <insert id="bachInsertCacheTradeList" parameterType="java.util.List">
        insert into third_hangguo_trade_data
        (order_date,supplier_no,supplier_name,batch_no,item_number,item_name,unit,origin_no,
        origin_name,position_no,position_name,price,package_number,number,amount,weight,
        trade_no,pos_no,pay_way,member_no,member_name,total_amount,operator,payer,
        pay_no,register_no)
        values
        <foreach collection="list" item="t" separator=",">
            (#{t.orderDate},#{t.supplierNo},#{t.supplierName},#{t.batchNo},#{t.itemNumber},#{t.itemName},#{t.unit},#{t.originNo},
            #{t.originName},#{t.positionNo},#{t.positionName},#{t.price},#{t.packageNumber},#{t.number},#{t.amount},#{t.weight},
            #{t.tradeNo},#{t.posNo},#{t.payWay},#{t.memberNo},#{t.memberName},#{t.totalAmount},#{t.operator},#{t.payer},
            #{t.payNo},#{t.registerNo}
            )
        </foreach>
    </insert>

    <select id="getBillTradeDetailListByBillIds" parameterType="java.util.List">
        SELECT
        id,
        parent_id,
        bill_id,
        checkin_record_id,
        checkout_record_id,
        checkin_status,
        checkout_status,
        sale_status,
        trade_type,
        buyer_id,
        buyer_name,
        seller_id,
        seller_name,
        product_name,
        stock_weight,
        total_weight,
        weight_unit,
        product_stock_id,
        trade_request_id,
        created,
        modified,
        is_batched,
        batch_no,
        parent_batch_no,
        pushaway_weight,
        soft_weight,
        register_no
        FROM trade_detail
        WHERE bill_id
        <foreach collection="list" open=" IN (" close=")" item="billId" separator=",">
            #{billId}
        </foreach>
    </select>
    <select id="getProductStockListByIds" parameterType="java.util.List">
        select
        id,
        preserve_type,
        stock_weight,
        total_weight,
        weight_unit,
        spec_name,
        product_name,
        product_id,
        user_name,
        user_id,
        brand_id,
        created,
        modified,
        trade_detail_num,
        brand_name,
        market_id
        from product_stock
        where
        id
        <foreach collection="list" open=" IN (" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </select>

    <update id="updateTradeReportListByBeyondAmount">
        update third_hangguo_trade_data
        set report_falg=3
        where amount >= 500000
    </update>

    <select id="selectTradeReportListByHandleFlag">
        select
        id,order_date,supplier_no,supplier_name,batch_no,item_number,item_name,unit,origin_no,
        origin_name,position_no,position_name,price,package_number,number,amount,weight,
        trade_no,pos_no,pay_way,member_no,member_name,total_amount,operator,payer,
        pay_no,register_no,handle_flag,report_falg,hadle_remark
        from third_hangguo_trade_data
        where handle_flag=3
    </select>


    <update id="batchUpdateCacheTradeHandleFlagToTrue">
        update third_hangguo_trade_data
        set handle_flag=#{handleFlag}
        where id
        <foreach collection="list" open=" IN (" close=")" item="id" separator=",">
            #{id}
        </foreach>
    </update>
</mapper>