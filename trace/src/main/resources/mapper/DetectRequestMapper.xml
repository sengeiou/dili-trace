<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dili.trace.dao.DetectRequestMapper">
    <resultMap id="BaseResultMap" type="com.dili.trace.domain.DetectRequest">
        <!--
          WARNING - @mbg.generated
        -->
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="detect_type" jdbcType="BIT" property="detectType"/>
        <result column="created" jdbcType="TIMESTAMP" property="created"/>
        <result column="modified" jdbcType="TIMESTAMP" property="modified"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
        -->
        id
        ,bill_id
        ,creator_id
        ,creator_name
        ,designated_id
        ,designated_name
        ,detect_type
        ,created
        ,modified
        ,detector_id
        ,detector_name
        ,detect_result
        ,detect_source
    </sql>
    <select id="selectRequestForDetect" resultType="com.dili.trace.domain.DetectRequest">
    select * from detect_request where id in(
        select id from (
        select * from (
        select detect_request.id,detect_request.detector_name,register_bill.detect_status from register_bill left join detect_request on register_bill.id=detect_request.bill_id
        where register_bill.detect_status = 30  and register_bill.market_id=#{marketId} and detector_name is null
        limit #{maxCount}
        )a
        union
        select * from (
        select detect_request.id,detect_request.detector_name,register_bill.detect_status  from register_bill left join detect_request on register_bill.id=detect_request.bill_id
        where register_bill.detect_status = 40 and register_bill.market_id=#{marketId} and detector_name =#{detectorName}
        limit #{maxCount}
        )b where detect_status=30 limit #{maxCount}
        )tmp
    )for update
  </select>

    <select id="selectDetectRequest" resultType="com.dili.trace.domain.DetectRequest">
        select detect_request.* from register_bill left join detect_request on register_bill.id=detect_request.bill_id
        where register_bill.detect_status = #{detectStatus.code}
        and register_bill.market_id=#{marketId}
        and detector_name=#{detectorName}
  </select>

    <select id="selectListPageByUserCategory" resultType="com.dili.trace.dto.DetectRequestOutDto">
        SELECT b.detect_status detectStatus,b.product_name productName,b.name,b.tally_area_no,b.bill_type
        ,b.weight,b.weight_unit weightUnit,d.*
        FROM detect_request d
        JOIN register_bill b ON d.id=b.detect_request_id
        WHERE 1=1
        <if test="detectStatus != null">
            AND b.detect_status=#{detectStatus}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (b.product_name LIKE CONCAT('%',#{keyword},'%')
            OR b.name LIKE CONCAT('%',#{keyword},'%'))
        </if>
        <if test="userId != null">
            AND b.user_id=#{userId}
        </if>
        <if test="createdStart != null">
            <![CDATA[ AND b.created >= #{createdStart} ]]>
        </if>
        <if test="createdEnd != null">
            <![CDATA[ AND b.created <= #{createdEnd} ]]>
        </if>
        <if test="detectStatusList != null  and detectStatusList.size()>0">
            AND b.detect_status
            <foreach collection="detectStatusList" open=" IN (" close=")" item="detectStatus" separator=",">
                #{detectStatus}
            </foreach>
        </if>
        <if test="detectTypeList != null  and detectTypeList.size()>0">
            AND d.detect_type
            <foreach collection="detectTypeList" open=" IN (" close=")" item="detectType" separator=",">
                #{detectType}
            </foreach>
        </if>
        <if test="detectResultList != null  and detectResultList.size()>0">
            AND d.detect_result
            <foreach collection="detectResultList " open=" IN (" close=")" item="detectResult" separator=",">
                #{detectResult}
            </foreach>
        </if>

    </select>

    <select id="getDetectRequestDetail" resultType="com.dili.trace.dto.DetectRequestOutDto">
       SELECT
          b.code billCode,
          b.created billCreated,
          b.operation_time operationTime,
          b.modified billModified,
          b.operator_name operatorName,
          b.detect_status,
          b.product_name productName,
          b.name,
          b.weight,
          b.weight_unit weightUnit,
          b.origin_name originName,
          b.verify_status ,
          b.plate,
          b.bill_type,
          b.origin_certifiy_url originCertifiyUrl,
          b.truck_type,
          b.brand_name,
          b.brand_id,
          b.spec_name,
          b.latest_detect_record_id,
          b.source_name tallyAreaNo,
          up.name upStreamName,
          d.*
        FROM
          detect_request d
          JOIN register_bill b
            ON d.id = b.detect_request_id
          LEFT JOIN upstream up
            ON up.id = b.upstream_id
        where d.id=#{id}
    </select>

  <select id="countBySampleSource" parameterType="com.dili.trace.api.input.DetectRequestQueryDto" resultType="com.dili.trace.api.output.SampleSourceCountOutputDto">
      select r.detect_source as sampleSource,count(1) as num
      from detect_request r
      join register_bill b on (r.id = b.detect_request_id)
      where 1=1
      <if test="likeProductNameOrUserName != null">
          <![CDATA[ AND (b.product_name like CONCAT('%',#{likeProductNameOrUserName},'%')
            OR b.name like CONCAT('%',#{likeProductNameOrUserName},'%')) ]]>
      </if>
      <if test="created != null">
          <![CDATA[ AND date(r.created) = #{created} ]]>
      </if>
      <if test="createdStart != null">
          <![CDATA[ AND b.created >= #{createdStart} ]]>
      </if>
      <if test="createdEnd != null">
          <![CDATA[ AND b.created <= #{createdEnd} ]]>
      </if>
      <if test="isDeleted != null">
          AND b.is_deleted = #{isDeleted}
      </if>
      <if test="marketId != null">
          AND b.market_id =#{marketId}
      </if>
      group by r.detect_source
  </select>

    <select id="countByDetectStatus" parameterType="com.dili.trace.api.input.DetectRequestQueryDto" resultType="com.dili.trace.api.output.CountDetectStatusDto">
        select b.detect_status as detect_status,count(1) as cnt
        from detect_request r
        join register_bill b on (r.id = b.detect_request_id)
        where 1=1
        <if test="likeProductNameOrUserName != null">
            <![CDATA[ AND (b.product_name like CONCAT('%',#{likeProductNameOrUserName},'%')
            OR b.name like CONCAT('%',#{likeProductNameOrUserName},'%')) ]]>
        </if>
        <if test="userId != null">
            AND b.user_id=#{userId}
        </if>
        <if test="created != null">
            <![CDATA[ AND date(r.created) = #{created} ]]>
        </if>
        <if test="isDeleted != null">
            AND b.is_deleted = #{isDeleted}
        </if>
        <if test="marketId != null">
            AND b.market_id =#{marketId}
        </if>
        <if test="createdStart != null">
            <![CDATA[ AND b.created >= #{createdStart} ]]>
        </if>
        <if test="createdEnd != null">
            <![CDATA[ AND b.created <= #{createdEnd} ]]>
        </if>

        group by b.detect_status
    </select>

  <select id="queryListBySampleSource" parameterType="com.dili.trace.api.input.DetectRequestQueryDto" resultType="com.dili.trace.api.output.SampleSourceListOutputDto">
      SELECT b.id billId,b.name,b.source_name tally_area_no,b.created,b.product_id,b.product_name,b.detect_request_id,b.has_detect_report,b.has_origin_certifiy,b.has_handle_result,b.weight,b.weight_unit,r.detect_Type sampleSource
      FROM detect_request r
      JOIN register_bill b ON (r.id = b.detect_request_id)
      WHERE 1=1
      <if test="likeProductNameOrUserName != null">
          <![CDATA[ AND (b.product_name like CONCAT('%',#{likeProductNameOrUserName},'%')
            OR b.name like CONCAT('%',#{likeProductNameOrUserName},'%')) ]]>
      </if>
      <if test="userId != null">
          AND b.user_id=#{userId}
      </if>
      <if test="created != null">
          <![CDATA[ AND date(r.created) = #{created} ]]>
      </if>
      <if test="createdStart != null">
          <![CDATA[ AND b.created >= #{createdStart} ]]>
      </if>
      <if test="createdEnd != null">
          <![CDATA[ AND b.created <= #{createdEnd} ]]>
      </if>
      <if test="isDeleted != null">
          AND b.is_deleted = #{isDeleted}
      </if>
      <if test="marketId != null">
          AND b.market_id =#{marketId}
      </if>
      <if test="sampleSource != null">
          AND r.detect_source =#{sampleSource}
      </if>

      <if test="keyword != null and keyword != ''">
          AND (b.product_name LIKE CONCAT('%',#{keyword},'%')
          OR b.name LIKE CONCAT('%',#{keyword},'%'))
      </if>

      <if test="sampleSourceList != null  and sampleSourceList.size()>0">
          AND r.detect_source
          <foreach collection="sampleSourceList " open=" IN (" close=")" item="detect_source" separator=",">
              #{detect_source}
          </foreach>
      </if>

      <if test="detectStatusList != null  and detectStatusList.size()>0">
          AND b.detect_status
          <foreach collection="detectStatusList" open=" IN (" close=")" item="detectStatus" separator=",">
              #{detectStatus}
          </foreach>
      </if>
      <if test="detectTypeList != null  and detectTypeList.size()>0">
          AND d.detect_type
          <foreach collection="detectTypeList" open=" IN (" close=")" item="detectType" separator=",">
              #{detectType}
          </foreach>
      </if>
      <if test="detectResultList != null  and detectResultList.size()>0">
          AND d.detect_result
          <foreach collection="detectResultList " open=" IN (" close=")" item="detectResult" separator=",">
              #{detectResult}
          </foreach>
      </if>
  </select>


  <select id="queryListByExample" parameterType="com.dili.trace.dto.DetectRequestWithBillDto" resultType="com.dili.trace.dto.DetectRequestWithBillDto">
      SELECT r.id, b.id billId, b.`created` billCreated, b.`code`, b.`verify_status`, b.`detect_status`,b.`bill_type`,b.`name`,b.`corporate_name`,
      b.`plate`, b.`product_id`,b.`product_name`,b.`product_alias_name`, b.`brand_id`, b.`brand_name`, b.`weight`, b.`weight_unit`, b.`origin_id`,
      b.`origin_name`,b.`has_detect_report`, b.`has_origin_certifiy`,b.`register_source`,b.`source_name`,
      r.`created`, r.`confirm_time`, r.`sample_time`, b.`sample_code`, r.`detect_time`,r.`detect_type`, r.`detect_result`, r.`detector_id`,
      r.`detector_name`, b.`has_handle_result`, b.`is_deleted`, r.`detect_code`,
      b.check_sheet_id,b.is_print_checksheet,r.detect_reservation_time
      FROM register_bill b
      left JOIN detect_request r ON (r.id = b.detect_request_id)
      LEFT JOIN detect_record ON detect_record.detect_request_id = r.id
      LEFT JOIN checkinout_record ON checkinout_record.bill_id =r.id and checkinout_record.`inout` =10 and checkinout_record.status =10
      WHERE 1=1
      <if test="billCreatedStart != null">
          <![CDATA[ AND b.created >= #{billCreatedStart} ]]>
      </if>
      <if test="billCreatedEnd != null">
          <![CDATA[ AND b.created <= #{billCreatedEnd} ]]>
      </if>
      <if test="createdStart != null">
          <![CDATA[ AND r.created >= #{createdStart} ]]>
      </if>
      <if test="createdEnd != null">
          <![CDATA[ AND r.created <= #{createdEnd} ]]>
      </if>
      <if test="checkinCreatedStart != null">
          <![CDATA[ AND checkinout_record.created >= #{checkinCreatedStart} ]]>
      </if>
      <if test="checkinCreatedEnd != null">
          <![CDATA[ AND checkinout_record.created <= #{checkinCreatedEnd} ]]>
      </if>
      <if test="detectTimeStart != null">
          <![CDATA[ AND r.detect_time >= #{detectTimeStart} ]]>
      </if>
      <if test="detectTimeEnd != null">
          <![CDATA[ AND r.detect_time <= #{detectTimeEnd} ]]>
      </if>
      <if test="registerSource != null">
          AND b.register_source =#{registerSource}
      </if>
      <if test="verifyStatus != null">
          AND b.verify_status =#{verifyStatus}
      </if>
      <if test="detectStatus != null">
          AND b.detect_status =#{detectStatus}
      </if>
      <if test="hasDetectReport != null">
          AND b.has_detect_report =#{hasDetectReport}
      </if>
      <if test="hasOriginCertifiy != null">
          AND b.has_origin_certifiy =#{hasOriginCertifiy}
      </if>
      <if test="hasHandleResult != null">
          AND b.has_handle_result =#{hasHandleResult}
      </if>
      <if test="likePlate != null">
          AND b.plate like '%${likePlate}%'
      </if>
      <if test="likeName != null">
          AND b.name like '%${likeName}%'
      </if>
      <if test="likeCode != null">
          AND b.code like '%${likeCode}%'
      </if>
      <if test="likeDetectCode != null">
          AND r.detect_code like '%${likeDetectCode}%'
      </if>
      <if test="likePhone != null">
          AND b.phone like '%${likePhone}%'
      </if>
      <if test="detectType != null">
          AND r.detect_type =#{detectType}
      </if>
      <if test="detectResult != null">
          AND r.detect_result =#{detectResult}
      </if>
      <if test="marketId != null">
          AND b.market_id =#{marketId}
      </if>
      <if test="billType != null">
          AND b.bill_type =#{billType}
      </if>
      <if test="isDeleted != null">
          AND b.is_deleted =#{isDeleted}
      </if>
      <if test="confirmTimeStart != null">
          <![CDATA[ AND r.confirm_time >= #{confirmTimeStart} ]]>
      </if>
      <if test="confirmTimeEnd != null">
          <![CDATA[ AND r.confirm_time <= #{confirmTimeEnd} ]]>
      </if>
      <if test="sampleTimeStart != null">
          <![CDATA[ AND r.sample_time >= #{sampleTimeStart} ]]>
      </if>
      <if test="sampleTimeEnd != null">
          <![CDATA[ AND r.sample_time <= #{sampleTimeEnd} ]]>
      </if>
      <if test="registType != null">
           AND r.regist_type = #{registType}
      </if>
      <if test="billTypes != null">
          AND b.bill_type
          <foreach collection="billTypes" open=" IN (" close=")" item="billType" separator=",">
              #{billType}
          </foreach>
      </if>
  </select>
</mapper>