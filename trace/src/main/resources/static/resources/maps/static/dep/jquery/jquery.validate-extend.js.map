{"version":3,"sources":["dep/jquery/jquery.validate-extend.js"],"names":["$","extend","validator","messages","required","remote","email","url","date","dateISO","number","digits","creditcard","equalTo","extension","maxlength","format","minlength","rangelength","range","max","min","firstname","setDefaults","focusInvalid","focusCleanup","noSpace","jQuery","addMethod","c","a","b","length","this","optional","test","value","element","arg","v","replace","isValidMoney"],"mappings":"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","file":"../../../../assets/dep/jquery/jquery.validate-extend.js","sourcesContent":["/*\r\n * Translated default messages for the jQuery validation plugin.\r\n * Locale: ZH (Chinese, 中文 (Zhōngwén), 汉语, 漢語)\r\n */\r\n$.extend($.validator.messages, {\r\n    required: '必填',\r\n    remote: '请修正此字段',\r\n    email: '请输入有效的电子邮件地址',\r\n    url: '请输入有效的网址',\r\n    date: '请输入有效的日期',\r\n    dateISO: '请输入有效的日期 (YYYY-MM-DD)',\r\n    number: '请输入有效的数字',\r\n    digits: '只能输入数字',\r\n    creditcard: '请输入有效的信用卡号码',\r\n    equalTo: '你的输入不相同',\r\n    extension: '请输入有效的后缀',\r\n    maxlength: $.validator.format('最多输入{0}个字符'),\r\n    minlength: $.validator.format('最少输入{0}个字符'),\r\n    rangelength: $.validator.format('长度{0}到{1}之间'),\r\n    range: $.validator.format('请输{0}到{1}之间数'),\r\n    max: $.validator.format('不大于{0}'),\r\n    min: $.validator.format('不小于{0}'),\r\n    firstname: 'firstname'\r\n})\r\n\r\n// 自定义设置\r\n$.validator.setDefaults({\r\n    focusInvalid: true,\r\n    focusCleanup: false,\r\n    noSpace: true\r\n})\r\njQuery.validator.addMethod('isMobile', function(c, a) {\r\n    var b = c.length\r\n    return this.optional(a) || b == 11 && /^1[3-9]\\d{9}$/.test(c)\r\n}, '请填写正确的手机号码')\r\njQuery.validator.addMethod('isRealName', function(b, a) {\r\n    return this.optional(a) || /^[\\u4E00-\\u9FA5+·]{2,10}$/.test(b) && !/^[\\u4E00-\\u9FA5+·]{2,10}[·]$/.test(b) && !/^[·][\\u4E00-\\u9FA5+.]{2,10}$/.test(b)\r\n}, '请填写正确的名字')\r\njQuery.validator.addMethod('isLetter', function(c, a) {\r\n    return this.optional(a) || /^[a-z]+$/.test(c)\r\n}, '请填写字母')\r\njQuery.validator.addMethod('isRMB', function(c, a) {\r\n    return this.optional(a) || /^(\\d{1,3}(\\,\\d{3})*|(\\d+))(\\.\\d{1,2})?$/.test(c)\r\n}, '请输入正确金额')\r\njQuery.validator.addMethod('isRMB1', function(c, a) {\r\n    return this.optional(a) || /^[1-9]{1,3}(,\\d{3})*\\.\\d{2}$/.test(c)\r\n}, '金额格式: 12,234.70')\r\njQuery.validator.addMethod('isRMB2', function(c, a) {\r\n    return this.optional(a) || /^[1-9]{1,3}(,\\d{3})*\\.\\d{1,2}?$/.test(c)\r\n}, '逗号分隔最多两位小数')\r\njQuery.validator.addMethod('isRMB3', function(c, a) {\r\n    return this.optional(a) || /^(\\d{1,9})(\\.\\d{1,2})?$/.test(c)\r\n}, '请输入正确金额不带逗号')\r\njQuery.validator.addMethod('isIntRMB', function(c, a) {\r\n    return this.optional(a) || /^(\\d{1,3}(\\,\\d{3})*|(\\d+))(\\.00)?$/.test(c)\r\n}, '金额需为整数')\r\njQuery.validator.addMethod('isInt', function(c, a) {\r\n    return this.optional(a) || /^\\d+$/.test(c)\r\n}, '请输入整数')\r\njQuery.validator.addMethod('isNaturalNum', function(c, a) {\r\n    return this.optional(a) || /^(0|[1-9][0-9]*)$/.test(c)\r\n}, '不小于0的整数')\r\njQuery.validator.addMethod('maxCurrency', function(value, element, arg) {\r\n    var max = arg\r\n    var v = value.replace(/,/g, '')\r\n    return this.optional(element) || !(v > max)\r\n    //return false;\r\n}, '不大于{0}')\r\njQuery.validator.addMethod('minCurrency', function(value, element, arg) {\r\n    var min = arg\r\n    var v = value.replace(/,/g, '')\r\n    return this.optional(element) || !(v < min)\r\n    //return false;\r\n}, '不小于{0}')\r\njQuery.validator.addMethod('floatADecimal', function(value, element) {\r\n    var isValidMoney = /^(([1-9]\\d+)|\\d)(\\.\\d)?$/.test(value)\r\n    return this.optional(element) || isValidMoney\r\n}, '最多一位小数')\r\njQuery.validator.addMethod('floatReserve', function(value, element) {\r\n    var isValidMoney = /^(([1-9]\\d+)|\\d)(\\.\\d{1,2})?$/.test(value)\r\n    return this.optional(element) || isValidMoney\r\n}, '最多两位小数')\r\njQuery.validator.addMethod('floaFour', function(value, element) {\r\n    var isValidMoney = /^(([1-9]\\d+)|\\d)(\\.\\d{1,4})?$/.test(value)\r\n    return this.optional(element) || isValidMoney\r\n}, '最多四位小数')\r\njQuery.validator.addMethod('floatFive', function(value, element) {\r\n    var isValidMoney = /^(([1-9]\\d+)|\\d)(\\.\\d{1,5})?$/.test(value)\r\n    return this.optional(element) || isValidMoney\r\n}, '最多五位小数')\r\njQuery.validator.addMethod('isIdCard0', function(c, a) {\r\n    return this.optional(a) || /^(^[1-9]\\d{7}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])\\d{3}$)|(^[1-9]\\d{5}[1-9]\\d{3}((0\\d)|(1[0-2]))(([0|1|2]\\d)|3[0-1])((\\d{4})|\\d{3}[Xx])$)$/.test(c)\r\n}, '请填写正确身份证号')\r\njQuery.validator.addMethod('isIdCard', function(c, a) {\r\n    return this.optional(a) || /^[0-9a-zA-Z()]{1,18}$/.test(c)\r\n}, '请填写正确身份证号')\r\njQuery.validator.addMethod('isWord', function(c, a) {\r\n    return this.optional(a) || /^[a-zA-Z0-9-\\u4e00-\\u9fa5]+$/.test(c)\r\n}, '仅限数字字母汉字')\r\njQuery.validator.addMethod('isChinese', function(c, a) {\r\n    return this.optional(a) || /^[\\u4e00-\\u9fa5]+$/.test(c)\r\n}, '仅限汉字')\r\njQuery.validator.addMethod('standardTime', function(c, a) {\r\n    return this.optional(a) || /^((19|20)[0-9]{2})-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01]) ([01]?[0-9]|2[0-3]):[0-5][0-9]:[0-5][0-9]$/.test(c)\r\n}, '格式(YYYY-MM-DD hh:ii:ss)')\r\njQuery.validator.addMethod('standardDate', function(c, a) {\r\n    return this.optional(a) || /^((19|20)[0-9]{2})-(0?[1-9]|1[012])-(0?[1-9]|[12][0-9]|3[01])$/.test(c)\r\n}, '格式(YYYY-MM-DD)')\r\njQuery.validator.addMethod('isIP', function(c, a) {\r\n    return this.optional(a) || /^\\d{1,3}\\.\\d{1,3}\\.\\d{1,3}$/.test(c)\r\n}, '请输入正确IP地址')\r\n\r\n\r\n"]}