溯源—用户管理 http://trace.nong12.com/user/index.html
列表 user/index.html#list
新增 user/index.html#add
修改 user/index.html#update
重置密码 user/index.html#reset
启用 user/index.html#enabled
禁用 user/index.html#disabled
导出 user/index.html#export

溯源—登记单管理 http://trace.nong12.com/registerBill/index.html
列表 registerBill/index.html#list
新增 registerBill/index.html#add
审核 registerBill/index.html#audit
复检 registerBill/index.html#review
主动送检 registerBill/index.html#auto
采样检测 registerBill/index.html#sampling
撤销 registerBill/index.html#undo
查看 registerBill/index.html#detail
导出 registerBill/index.html#export
上传处理结果 registerBill/index.html#handle
复制登记单: registerBill/index.html#copy
用户数据是否可见 registerBill/create.html#user
小程序后台数据查看 registerBill/index.html#weichat-view

修改: registerBill/index.html#edit
审核不检测: registerBill/index.html#auditWithoutDetect

批量审核 registerBill/index.html#batchAudit
批量主动送检 registerBill/index.html#batchAuto
批量采样检测 registerBill/index.html#batchSampling

上传产地证明 registerBill/index.html#uploadOrigincertifiy

溯源—检测统计 http://trace.nong12.com/registerBill/statics.html
列表 registerBill/statics.html#list
查看 registerBill/statics.html#detail
导出 registerBill/statics.html#export

//2.0版本脚本变动
ALTER TABLE `separate_sales_record`
MODIFY COLUMN `register_bill_code`  varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '被分销的登记单编码' AFTER `sales_weight`,
ADD COLUMN `trade_no`  varchar(20) NULL AFTER `register_bill_code`;
ALTER TABLE `separate_sales_record`
ADD INDEX `TRADE_NO_INDEX` (`trade_no`) USING BTREE ;

ALTER TABLE `quality_trace_trade_bill`
ADD COLUMN `register_bill_code`  varchar(20) NULL AFTER `bill_id`;
ALTER TABLE `quality_trace_trade_bill`
ADD INDEX `REGISTER_BILL_CODE_INDEX` (`register_bill_code`) USING BTREE ;

ALTER TABLE `quality_trace_trade_bill`
ADD COLUMN `match_status`  int NULL COMMENT '匹配状态';

ALTER TABLE `quality_trace_trade_bill`
ADD COLUMN `sales_type`  tinyint(1) NULL COMMENT '1.分销 2.全销' AFTER `register_bill_code` ;

ALTER TABLE `register_bill` DROP COLUMN `trade_no`;
ALTER TABLE `biz_number` MODIFY COLUMN `version`  bigint(20) NULL DEFAULT NULL COMMENT '版本号' AFTER `memo`;

ALTER TABLE `separate_sales_record`
ADD COLUMN `sales_plate`  varchar(15) NULL COMMENT '分销车牌号' AFTER `sales_user_name`;

ALTER TABLE `register_bill`
ADD COLUMN `sample_code`  varchar(20) NULL COMMENT '采样编号' AFTER `code`;

INSERT INTO `biz_number` (`id`, `type`, `value`, `memo`, `version`) VALUES ('2', 'register_bill_sample_code', '2019092500001', '登记单采样编号', '0');

ALTER TABLE `quality_trace_trade_bill`
ADD UNIQUE INDEX `BILL_ID_UNIQUE_INDEX` (`bill_id`) ;

2.1

ALTER TABLE `user`
CHANGE COLUMN `tailly_area_no` `tally_area_nos` varchar(60) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL AFTER `card_no_back_url`;
##用户理货区
CREATE TABLE `user_tally_area` (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `tally_area_no` varchar(20) NOT NULL COMMENT '理货区号',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`id`),
  UNIQUE KEY `TALLY_AREA_NO_UNIQUE_INDEX` (`tally_area_no`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

##理货区数据迁移
INSERT INTO user_tally_area (tally_area_no,user_id,created)
SELECT tally_area_nos,id,now() FROM `user`;


批量审核 registerBill/index.html#batchAudit
批量主动送检 registerBill/index.html#batchAuto
批量采样检测 registerBill/index.html#batchSampling
用户导出 user/index.html#export

ALTER TABLE `register_bill`
MODIFY COLUMN `tally_area_no` varchar(60) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '理货区号' AFTER `register_source`;
UPDATE register_bill rb,`user` u set rb.tally_area_no = u.tally_area_nos WHERE rb.user_id = u.id AND rb.tally_area_no IS NULL AND rb.register_source = 1;




CREATE TABLE `user_plate`  (
  `id` bigint(20) NOT NULL AUTO_INCREMENT,
  `plate` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '车牌号',
  `user_id` bigint(20) NOT NULL COMMENT '用户id',
  `created` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0),
  `modified` timestamp(0) NOT NULL DEFAULT CURRENT_TIMESTAMP(0) ON UPDATE CURRENT_TIMESTAMP(0),
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `TALLY_AREA_NO_UNIQUE_INDEX`(`plate`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;




CREATE TABLE trace.code_generate (
	id bigint(20) auto_increment NOT NULL,
	`type` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '编号类型',
	`suffix` varchar(20) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '编号前缀',
	`code` bigint(20) NOT NULL COMMENT '当前编号',
	created timestamp DEFAULT CURRENT_TIMESTAMP NOT NULL,
	modified timestamp DEFAULT CURRENT_TIMESTAMP on update CURRENT_TIMESTAMP NOT NULL,
	CONSTRAINT `PRIMARY` PRIMARY KEY (id)
)
ENGINE=InnoDB
DEFAULT CHARSET=utf8
COLLATE=utf8_general_ci
COMMENT='';